{"version":3,"sources":["strategies/BubbleSortStrategy.js","strategies/SelectionSortStrategy.js","components/Config.js","components/Sound.js","components/Key.js","components/List.js","components/SelectScale.js","components/SelectAlgo.js","components/Algorithm.js","components/SelectBase.js","utils.js","components/Keyboard.js","index.js"],"names":["BubbleSortStrategy","Object","classCallCheck","this","execute","items","array","toConsumableArray","instructions","i","length","j","push","_ref","SelectionSortStrategy","elem","Scales","Map","set","Algos","id","name","Data","Notes","Octaves","octave","nameToStrategy","Sound","props","_this","possibleConstructorReturn","getPrototypeOf","call","getAudioName","sound","prefix","process","Math","floor","size","note","get","endsWith","charAt","toLocaleLowerCase","play","audio","state","Audio","React","Component","Sounds","data","keys","map","n","Array","v","flat","sounds","s","Key","ctrans","position","color","styles","transform","height","backgroundColor","react_default","a","createElement","style","prevProps","prevState","snapshot","List","handleItemRender","item","index","Key_Key","key","className","SelectScale","handleInputChange","event","value","target","onChange","handleSubmit","preventDefault","onItemsChange","scale","onSubmit","from","SelectAlgo","setState","defineProperty","algo","type","Algorithm","strategyName","isNext","step","init","console","log","strategy","nextStep","pair","SelectBase","base","values","getKey","find","_ref2","slicedToArray","Keyboard","handleBaseChange","handleScaleChange","handleAlgorithmChange","sort","generate","random","slice","algoName","sortOne","setTimeout","SelectScale_SelectScale","SelectBase_SelectBase","onClick","SelectAlgo_SelectAlgo","List_List","ReactDOM","render","Keyboard_Keyboard","document","querySelector"],"mappings":"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","file":"static/js/main.a815de1a.chunk.js","sourcesContent":["import '../index.scss';\n\nexport class BubbleSortStrategy {\n\n    static execute = (items) => {\n        const array = [...items];\n        const instructions = [];\n        for (let i = 0; i < items.length; ++i) {\n            for (let j = 0; j < items.length - 1; ++j) {\n                if (array[j] > array[j + 1]) {\n                    instructions.push([j, j + 1]);\n                    [array[j], array[j + 1]] = [array[j + 1], array[j]];\n                }\n            }\n        }\n        return instructions;\n    };\n\n}","import '../index.scss';\n\nexport class SelectionSortStrategy {\n\n    static execute = (items) => {\n        const array = [...items];\n        const instructions = [];\n        for (let i = 1; i < items.length; ++i) {\n            const elem = array[i];\n            for (let j = i - 1; j >= 0 && array[j] > elem; --j) {\n                instructions.push([j, j + 1]);\n                [array[j], array[j + 1]] = [array[j + 1], array[j]];\n\n            }\n        }\n        return instructions;\n    };\n\n}","import {BubbleSortStrategy} from \"../strategies/BubbleSortStrategy\";\nimport {SelectionSortStrategy} from \"../strategies/SelectionSortStrategy\";\n\nexport const Scales = new Map()\n    .set('Major', [0, 2, 4, 5, 7, 9, 11])\n    .set('Blues', [0, 3, 5, 6, 7, 10])\n    .set('Harmonic major', [0, 2, 3, 5, 7, 8, 11])\n    .set('Whole tone', [0, 2, 4, 6, 8, 10])\n    .set('Octatonic', [0, 1, 3, 4, 7, 8, 10, 11]);\n\nexport const Algos = [ { id: 0, name: 'Bubble' }, { id: 1, name: 'Selection'} ];\n\nexport const Data = [0, 15, 10, 4, 20, 32, 5, 3, 8];\n\nexport const Notes = new Map()\n    .set(0, 'C').set(1, 'C#').set(2, 'D').set(3, 'D#').set(4, 'E').set(5, 'F')\n    .set(6, 'F#').set(7, 'G').set(8, 'G#').set(9, 'A').set(10, 'A#').set(11, 'B');\n\nexport const Octaves = [\n    {id: 0, octave: 3}, {id: 1, octave: 4}, {id: 2, octave: 5},\n];\n\nexport const nameToStrategy = new Map()\n    .set('Bubble', (array) => BubbleSortStrategy.execute(array))\n    .set('Selection', (array) => SelectionSortStrategy.execute(array));","import React from 'react';\nimport '../index.scss';\nimport {Octaves, Notes} from './Config';\n\nclass Sound extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sound: props.sound,\n        };\n        this.audio = new Audio(this.getAudioName(props.sound));\n    }\n\n    getAudioName = (sound) => {\n        const prefix = process.env.PUBLIC_URL + '/sounds/';\n        const sufix = '.mp3';\n        const octave = Octaves[Math.floor(sound / Notes.size)].octave;\n        const note = Notes.get(sound % Notes.size);\n        if (note.endsWith('#')) {\n            return prefix + note.charAt(0).toLocaleLowerCase() + '-' + octave + sufix;\n        } else {\n            return prefix + '_' + note.charAt(0).toLocaleLowerCase() + octave + sufix;\n        }\n    };\n    play = () => {\n        return this.audio.play();\n    };\n}\n\nexport default class Sounds {\n    static data = [...Notes.keys()].map(n => {\n        return [...Array(Octaves.length).keys()]\n            .map(v => n + Notes.size * v) // produces the same sound for each octave\n    }).flat();\n\n    static sounds = new Map(this.data.map(s => [s, new Sound({sound: s})]));\n}\n","import React from 'react';\nimport '../index.scss';\nimport Sounds from '../components/Sound';\n\nexport default class Key extends React.Component {\n\n    play = () => {\n        const sound = Sounds.sounds.get(this.props.sound);\n        sound.play();\n    };\n\n    render() {\n        const x = this.props.position * 70 + 100;\n        const ctrans = 'translate(' + x + '%)';\n        const color = 'rgb(' + this.props.sound * 100 % 256 + ',' + this.props.sound * 20 % 256 + ',' + this.props.sound * 5 % 256 + ')';\n        const styles = {\n            transform: ctrans,\n            height: this.props.sound * 10 + 100,\n            backgroundColor: color\n        };\n        return (\n            <li style={styles}></li>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.position !== prevProps.position) {\n            this.play();\n        }\n    }\n}","import React from 'react';\nimport Key from '../components/Key';\nimport '../index.scss';\n\nexport default class List extends React.Component {\n    render() {\n        return(\n            <ul className=\"list\">\n                {this.props.items.map(this.handleItemRender)}\n            </ul>\n        )\n    }\n    handleItemRender = (item, index) => {\n        return(\n            <Key key={item} sound={item} position={index} />\n        );\n    };\n\n}","import React from 'react';\nimport '../index.scss';\nimport {Scales} from './Config';\n\nexport default class SelectScale extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            scale: 'Major'\n        };\n    }\n\n    handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.value;\n\n        this.props.onChange(value);\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.onItemsChange(this.props.scale);\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Scale\n                    <select className=\"selections\" value={this.props.scale} name=\"scale\" onChange={this.handleInputChange}>\n                        {Array.from(Scales.keys()).map(s =>\n                            <option key={s} value={s}>{s}</option>\n                        )}\n                    </select>\n                </label>\n            {/*    <button className=\"buttons\" type=\"submit\">Generate</button>*/}\n            </form>\n        );\n    }\n}","import React from 'react';\nimport '../index.scss';\nimport {Algos} from './Config';\n\nexport default class SelectAlgo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            algo: 'Bubble',\n        };\n    }\n\n    handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.onItemsChange(this.state.algo);\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Algorithm\n                    <select className=\"selections\" value={this.state.algo} name=\"algo\" onChange={this.handleInputChange}>\n                        {Algos.map(a =>\n                            <option key={a.id} value={a.name}>{a.name}</option>\n                        )}\n                    </select>\n                </label>\n                <button className=\"buttons\" type=\"submit\">Sort</button>\n            </form>\n        );\n    }\n}","import '../index.scss';\nimport {nameToStrategy} from \"./Config\";\n\nexport class Algorithm {\n    constructor(strategyName) {\n        this.instructions = [];\n        this.step = 0;\n        this.strategy = strategyName;\n    }\n\n    isNext = () => {\n        return this.step < this.instructions.length;\n    };\n\n    init = (array) => {\n        console.log(nameToStrategy);\n        this.instructions = nameToStrategy.get(this.strategy)(array);\n        this.step = 0;\n    };\n\n    nextStep = (array) => {\n        if (!this.isNext()) {\n            return array;\n        }\n        const pair = this.instructions[this.step];\n        [array[pair[0]], array[pair[1]]] = [array[pair[1]], array[pair[0]]];\n        ++this.step;\n        return array;\n    };\n\n}","import React from 'react';\nimport '../index.scss';\nimport {Notes} from './Config';\n\nexport default class SelectBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            base: 'C',\n        };\n    }\n\n    handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.value;\n\n        this.props.onChange(value);\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.onItemsChange(this.props.base);\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Base\n                    <select className=\"selections\" value={this.props.base} name=\"base\" onChange={this.handleInputChange}>\n                        {Array.from(Notes.values()).map(s =>\n                            <option key={s} value={s}>{s}</option>\n                        )}\n                    </select>\n                </label>\n                {/*    <button className=\"buttons\" type=\"submit\">Generate</button>*/}\n            </form>\n        );\n    }\n}","\nexport const getKey = (map, value) => {\n    return [...map].find(([key, val]) => val === value)[0];\n};","import React from 'react';\nimport List from '../components/List';\nimport '../index.scss';\nimport SelectScale from \"./SelectScale\";\nimport SelectAlgo from \"./SelectAlgo\";\nimport {Scales, Data, Octaves, Notes} from \"./Config\";\nimport {Algorithm} from \"./Algorithm\";\nimport SelectBase from \"./SelectBase\";\nimport {getKey} from \"../utils\";\n\nexport default class Keyboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: Data,\n            algo: '',\n            scale: 'Major',\n            base: 'C',\n        };\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <div className=\"selections\">\n                        <SelectScale\n                            onChange={this.handleScaleChange}/>\n                    </div>\n                    <div className=\"selections\">\n                        <SelectBase\n                            onChange={this.handleBaseChange}/>\n                    </div>\n                    <div className=\"buttons\">\n                        <button className=\"data-toggle\"\n                                onClick={this.generate}>Generate\n                        </button>\n                    </div>\n                    <div className=\"selections\">\n                        <SelectAlgo\n                            onItemsChange={this.handleAlgorithmChange}/>\n                    </div>\n                </header>\n                <div className=\"list-container\">\n                    <List\n                        items={this.state.data}/>\n                </div>\n            </div>\n        )\n    }\n\n    handleBaseChange = (value) => {\n        this.setState({base: value});\n    };\n\n    handleScaleChange = (value) => {\n        this.setState({scale: value});\n    };\n\n    handleAlgorithmChange = (value) => {\n        this.sort(value);\n    };\n\n    generate = () => {\n        this.setState(state => {\n            let scale = Scales.get(state.scale).map(v => (v + getKey(Notes, state.base)) % 12);\n            const data = scale.map(n => {\n                return [...Array(Octaves.length).keys()]\n                    .map(v => n + Notes.size * v) // produces the same sound for each octave\n            }).flat()\n                .sort(() => 0.5 - Math.random()) // shuffle\n                .slice(0, Data.length);\n            return {\n                data,\n            };\n        });\n    };\n\n    sort = (algoName) => {\n        const algo = new Algorithm(algoName);\n        algo.init(this.state.data);\n        this.sortOne(algo);\n    };\n\n    sortOne = (algo) => {\n        if (!algo.isNext()) return;\n        const items = algo.nextStep(this.state.data);\n        this.setState({data: items, algo: algo.strategy},\n            () => setTimeout(() => {\n                this.sortOne(algo);\n            }, 500));\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Keyboard from '../src/components/Keyboard';\n\nReactDOM.render(\n    <Keyboard />,\n    document.querySelector('#root')\n);"],"sourceRoot":""}